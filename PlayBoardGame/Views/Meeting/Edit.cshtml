@using PlayBoardGame.Controllers
@model MeetingViewModels.CreateEditMeetingViewModel

@{
    ViewBag.Title = "Create/edit meeting";
}

@await Component.InvokeAsync("MeetingTabs", new
{
    meetingId = Model.MeetingID, tabName = TabName.Details,
    isCreateMode = ViewContext.RouteData.Values["action"] as string == nameof(MeetingController.Create)
})

<div>
    <form asp-action="Edit" method="post">
        <input type="hidden" asp-for="MeetingID"/>
        <input type="hidden" asp-for="Organizers"/>
        <input type="hidden" asp-for="OrganizerName"/>

        <fieldset
            @{
                if (ViewContext.RouteData.Values["action"] as string != nameof(MeetingController.Create)
                    && Model.OrganizerName != User.Identity.Name)
                {
                    <text>disabled="disabled"</text>
                }
            }
        >
            <div class="form-group">
                <label asp-for="Title">Title</label>
                <span asp-validation-for="Title" class="text-danger"></span>
                <input asp-for="Title" class="form-control"/>
            </div>

            <div class="form-group">
                <label asp-for="StartDateTime">Start date and time</label>
                <span asp-validation-for="StartDateTime" class="text-danger"></span>
                <input type="datetime-local" asp-for="StartDateTime" class="form-control"/>
            </div>

            <div class="form-group">
                <label asp-for="EndDateTime">End date and time</label>
                <span asp-validation-for="EndDateTime" class="text-danger"></span>
                <input type="datetime-local" asp-for="EndDateTime" class="form-control"/>
            </div>

            <div class="form-group">
                <label asp-for="OrganizerId">Organizer</label>
                <span asp-validation-for="OrganizerId" class="text-danger"></span>
                <select asp-for="OrganizerId" asp-items="@(new SelectList(Model.Organizers, "Id", "UserName"))" class="form-control">
                </select>
            </div>

            <div class="form-group">
                <label asp-for="Address.Street">Street</label>
                <span asp-validation-for="Address.Street" class="text-danger"></span>
                <input asp-for="Address.Street" class="form-control"/>
            </div>

            <div class="form-group">
                <label asp-for="Address.City">City</label>
                <span asp-validation-for="Address.City" class="text-danger"></span>
                <input asp-for="Address.City" class="form-control"/>
            </div>

            <div class="form-group">
                <label asp-for="Address.PostalCode">Postal code</label>
                <span asp-validation-for="Address.PostalCode" class="text-danger"></span>
                <input asp-for="Address.PostalCode" class="form-control"/>
            </div>

            <div class="form-group">
                <label asp-for="Address.Country">Country</label>
                <span asp-validation-for="Address.Country" class="text-danger"></span>
                <select asp-for="Address.Country" asp-items="Html.GetEnumSelectList<Country>()" class="form-control"></select>
            </div>

            <div class="form-group">
                <label asp-for="Notes">Notes</label>
                <span asp-validation-for="Notes" class="text-danger"></span>
                <textarea asp-for="Notes" class="form-control"></textarea>
            </div>

            <div class="text-left">
                <button class="btn btn-info" type="submit">Save</button>
                <a asp-action="List" class="btn btn-secondary">Cancel</a>
            </div>
        </fieldset>

    </form>
</div>